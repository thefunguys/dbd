#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Nov 12 19:58:31 2016

@author: William Cox
"""

import pygame
from pygame.locals import *
from random import randint

#---GLOBALS---#
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255,0,0)
GREEN = (0,255,0)
word_list = ['the','and','red','green','yellow','stop','go','slow']
game_height = 320
game_width = 440
mid_x = 220
word_width = 15
word_height = 15
x_change = 20

class Ship(pygame.sprite.Sprite):
    
    def __init__(self):
        super().__init__()
        
        #self.image = pygame.image.load('heart.png')
        self.image = pygame.Surface([20,25])
        self.image.fill(WHITE)
        
        self.rect = self.image.get_rect()
        self.rect.x = mid_x
        self.rect.y = game_height - 20
        
        
class Word(pygame.sprite.Sprite):
    
    def __init__(self):
        super().__init__()
        self.x = randint(20,game_width - 20)
        self.y = 15
        self.xy = (self.x,self.y)
        self.font = pygame.font.Font(None,25)
        self.word = word_list[randint(0,len(word_list)-1)]
        self.color = GREEN
        self.reRender()
        
    def reRender(self):
        self.image = self.font.render(self.word, True, self.color)
        self.rect = self.image.get_rect()
        self.rect.center = self.xy
        
class Bullet(pygame.sprite.Sprite):
    
    def __init__(self,Ship):
        super().__init__()
        self.x = Ship.x
        self.y = Ship.y
        
        self.image = pygame.Surface([5,15])
        self.image.fill(RED)
        
        self.rect = self.image.get_rect()
        self.rect.x = self.x
        self.rect.y = self.y
        
        
class Score(pygame.sprite.Sprite):
    """sprite for score"""

    def __init__(self,xy):
        pygame.sprite.Sprite.__init__(self)
        self.xy = xy
        self.font = pygame.font.Font(None,50)
        self.color = (255,165,0)
        self.score = 0
        self.reRender()       
    
    def add(self,points):
        self.score += points
        self.reRender()
        
    def reset(self):
        self.score = 0
        self.reRender()
        
    def reRender(self):
        self.image = self.font.render("%d" %(self.score), True, self.color)
        self.rect = self.image.get_rect()
        self.rect.center = self.xy        
        
        
        
            
    
        
def collision_word(bullet,word):
    if abs(bullet.x - word.x) < 10:
        if abs(bullet.y - word.y) < 5:
            word.image.fill(BLACK)
            allspriteslist.remove(word)
            score.add(1)
        
def collision_ship(ship):
    if ship.rect.x > game_width - 10:
        ship.rect.x = ship.rect.x % (game_width -10)
    if ship.rect.x < 10:
        ship.rect.x = ship.rect.x + game_width
        
    
pygame.init()

screen = pygame.display.set_mode([game_width,game_height])

pygame.display.set_caption('Dylans Bad Day')

allspriteslist = pygame.sprite.Group()

ship = Ship()
allspriteslist.add(ship)

clock = pygame.time.Clock()
done = False
score = Score((30,30))
allspriteslist.add(score)

word = Word()
allspriteslist.add(word)

             
while not done:
    
    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                ship.rect.x = ship.rect.x - x_change
            if event.key == pygame.K_RIGHT:
                ship.rect.x = ship.rect.x + x_change
            if event.key == pygame.K_UP:
                bullet = Bullet(ship)
                allspriteslist.add(bullet)
            if event.key == pygame.K_ESCAPE:
                done = True
        collision_ship(ship)
        for sprite in allspriteslist:
            if type(sprite) == Bullet:        
                collision_word(bullet,word)
                
        word.y = word.y + 10
        
        screen.fill(BLACK)
        allspriteslist.draw(screen)
        pygame.display.flip()
        clock.tick(5)
        
pygame.quit()
                
                
                
    